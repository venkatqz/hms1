// Generated by view binder compiler. Do not edit!
package com.example.hms1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hms1.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnBackToLogin;

  @NonNull
  public final MaterialButton btnSignUp;

  @NonNull
  public final TextInputEditText etAdminBlock;

  @NonNull
  public final TextInputEditText etCategory;

  @NonNull
  public final TextInputEditText etDateOfBirth;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etName;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final TextInputEditText etRegistrationNumber;

  @NonNull
  public final TextInputEditText etRoomNumber;

  @NonNull
  public final TextInputEditText etSecretKey;

  @NonNull
  public final TextInputEditText etStudentBlock;

  @NonNull
  public final TextInputEditText etWorkerBlock;

  @NonNull
  public final TextInputEditText etWorkerId;

  @NonNull
  public final LinearLayout llAdminFields;

  @NonNull
  public final LinearLayout llStudentFields;

  @NonNull
  public final LinearLayout llWorkerFields;

  @NonNull
  public final RadioButton rbAdmin;

  @NonNull
  public final RadioButton rbStudent;

  @NonNull
  public final RadioButton rbWorker;

  @NonNull
  public final RadioGroup rgUserType;

  @NonNull
  public final AutoCompleteTextView spinnerWorkerType;

  private ActivitySignUpBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnBackToLogin, @NonNull MaterialButton btnSignUp,
      @NonNull TextInputEditText etAdminBlock, @NonNull TextInputEditText etCategory,
      @NonNull TextInputEditText etDateOfBirth, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etName, @NonNull TextInputEditText etPassword,
      @NonNull TextInputEditText etRegistrationNumber, @NonNull TextInputEditText etRoomNumber,
      @NonNull TextInputEditText etSecretKey, @NonNull TextInputEditText etStudentBlock,
      @NonNull TextInputEditText etWorkerBlock, @NonNull TextInputEditText etWorkerId,
      @NonNull LinearLayout llAdminFields, @NonNull LinearLayout llStudentFields,
      @NonNull LinearLayout llWorkerFields, @NonNull RadioButton rbAdmin,
      @NonNull RadioButton rbStudent, @NonNull RadioButton rbWorker, @NonNull RadioGroup rgUserType,
      @NonNull AutoCompleteTextView spinnerWorkerType) {
    this.rootView = rootView;
    this.btnBackToLogin = btnBackToLogin;
    this.btnSignUp = btnSignUp;
    this.etAdminBlock = etAdminBlock;
    this.etCategory = etCategory;
    this.etDateOfBirth = etDateOfBirth;
    this.etEmail = etEmail;
    this.etName = etName;
    this.etPassword = etPassword;
    this.etRegistrationNumber = etRegistrationNumber;
    this.etRoomNumber = etRoomNumber;
    this.etSecretKey = etSecretKey;
    this.etStudentBlock = etStudentBlock;
    this.etWorkerBlock = etWorkerBlock;
    this.etWorkerId = etWorkerId;
    this.llAdminFields = llAdminFields;
    this.llStudentFields = llStudentFields;
    this.llWorkerFields = llWorkerFields;
    this.rbAdmin = rbAdmin;
    this.rbStudent = rbStudent;
    this.rbWorker = rbWorker;
    this.rgUserType = rgUserType;
    this.spinnerWorkerType = spinnerWorkerType;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackToLogin;
      MaterialButton btnBackToLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnBackToLogin == null) {
        break missingId;
      }

      id = R.id.btnSignUp;
      MaterialButton btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.etAdminBlock;
      TextInputEditText etAdminBlock = ViewBindings.findChildViewById(rootView, id);
      if (etAdminBlock == null) {
        break missingId;
      }

      id = R.id.etCategory;
      TextInputEditText etCategory = ViewBindings.findChildViewById(rootView, id);
      if (etCategory == null) {
        break missingId;
      }

      id = R.id.etDateOfBirth;
      TextInputEditText etDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (etDateOfBirth == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etName;
      TextInputEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etPassword;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etRegistrationNumber;
      TextInputEditText etRegistrationNumber = ViewBindings.findChildViewById(rootView, id);
      if (etRegistrationNumber == null) {
        break missingId;
      }

      id = R.id.etRoomNumber;
      TextInputEditText etRoomNumber = ViewBindings.findChildViewById(rootView, id);
      if (etRoomNumber == null) {
        break missingId;
      }

      id = R.id.etSecretKey;
      TextInputEditText etSecretKey = ViewBindings.findChildViewById(rootView, id);
      if (etSecretKey == null) {
        break missingId;
      }

      id = R.id.etStudentBlock;
      TextInputEditText etStudentBlock = ViewBindings.findChildViewById(rootView, id);
      if (etStudentBlock == null) {
        break missingId;
      }

      id = R.id.etWorkerBlock;
      TextInputEditText etWorkerBlock = ViewBindings.findChildViewById(rootView, id);
      if (etWorkerBlock == null) {
        break missingId;
      }

      id = R.id.etWorkerId;
      TextInputEditText etWorkerId = ViewBindings.findChildViewById(rootView, id);
      if (etWorkerId == null) {
        break missingId;
      }

      id = R.id.llAdminFields;
      LinearLayout llAdminFields = ViewBindings.findChildViewById(rootView, id);
      if (llAdminFields == null) {
        break missingId;
      }

      id = R.id.llStudentFields;
      LinearLayout llStudentFields = ViewBindings.findChildViewById(rootView, id);
      if (llStudentFields == null) {
        break missingId;
      }

      id = R.id.llWorkerFields;
      LinearLayout llWorkerFields = ViewBindings.findChildViewById(rootView, id);
      if (llWorkerFields == null) {
        break missingId;
      }

      id = R.id.rbAdmin;
      RadioButton rbAdmin = ViewBindings.findChildViewById(rootView, id);
      if (rbAdmin == null) {
        break missingId;
      }

      id = R.id.rbStudent;
      RadioButton rbStudent = ViewBindings.findChildViewById(rootView, id);
      if (rbStudent == null) {
        break missingId;
      }

      id = R.id.rbWorker;
      RadioButton rbWorker = ViewBindings.findChildViewById(rootView, id);
      if (rbWorker == null) {
        break missingId;
      }

      id = R.id.rgUserType;
      RadioGroup rgUserType = ViewBindings.findChildViewById(rootView, id);
      if (rgUserType == null) {
        break missingId;
      }

      id = R.id.spinnerWorkerType;
      AutoCompleteTextView spinnerWorkerType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerWorkerType == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ScrollView) rootView, btnBackToLogin, btnSignUp,
          etAdminBlock, etCategory, etDateOfBirth, etEmail, etName, etPassword,
          etRegistrationNumber, etRoomNumber, etSecretKey, etStudentBlock, etWorkerBlock,
          etWorkerId, llAdminFields, llStudentFields, llWorkerFields, rbAdmin, rbStudent, rbWorker,
          rgUserType, spinnerWorkerType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
