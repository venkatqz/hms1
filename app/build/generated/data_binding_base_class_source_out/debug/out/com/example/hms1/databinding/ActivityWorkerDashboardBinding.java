// Generated by view binder compiler. Do not edit!
package com.example.hms1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hms1.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWorkerDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnSignOut;

  @NonNull
  public final MaterialButton btnUpdateTaskStatus;

  @NonNull
  public final MaterialButton btnViewAnnouncements;

  @NonNull
  public final MaterialButton btnViewAssignedTasks;

  @NonNull
  public final MaterialButton btnViewProfile;

  @NonNull
  public final Toolbar toolbar;

  private ActivityWorkerDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnSignOut, @NonNull MaterialButton btnUpdateTaskStatus,
      @NonNull MaterialButton btnViewAnnouncements, @NonNull MaterialButton btnViewAssignedTasks,
      @NonNull MaterialButton btnViewProfile, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnSignOut = btnSignOut;
    this.btnUpdateTaskStatus = btnUpdateTaskStatus;
    this.btnViewAnnouncements = btnViewAnnouncements;
    this.btnViewAssignedTasks = btnViewAssignedTasks;
    this.btnViewProfile = btnViewProfile;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWorkerDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWorkerDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_worker_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWorkerDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignOut;
      MaterialButton btnSignOut = ViewBindings.findChildViewById(rootView, id);
      if (btnSignOut == null) {
        break missingId;
      }

      id = R.id.btnUpdateTaskStatus;
      MaterialButton btnUpdateTaskStatus = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateTaskStatus == null) {
        break missingId;
      }

      id = R.id.btnViewAnnouncements;
      MaterialButton btnViewAnnouncements = ViewBindings.findChildViewById(rootView, id);
      if (btnViewAnnouncements == null) {
        break missingId;
      }

      id = R.id.btnViewAssignedTasks;
      MaterialButton btnViewAssignedTasks = ViewBindings.findChildViewById(rootView, id);
      if (btnViewAssignedTasks == null) {
        break missingId;
      }

      id = R.id.btnViewProfile;
      MaterialButton btnViewProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnViewProfile == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityWorkerDashboardBinding((CoordinatorLayout) rootView, btnSignOut,
          btnUpdateTaskStatus, btnViewAnnouncements, btnViewAssignedTasks, btnViewProfile, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
