// Generated by view binder compiler. Do not edit!
package com.example.hms1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hms1.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnAddStudent;

  @NonNull
  public final MaterialButton btnCancelAddStudent;

  @NonNull
  public final MaterialButton btnManageRooms;

  @NonNull
  public final MaterialButton btnManageStudents;

  @NonNull
  public final MaterialButton btnManageWorkers;

  @NonNull
  public final MaterialButton btnReports;

  @NonNull
  public final MaterialButton btnSignOut;

  @NonNull
  public final MaterialButton btnSubmitStudent;

  @NonNull
  public final MaterialCardView cardAddStudent;

  @NonNull
  public final TextInputEditText etBlock;

  @NonNull
  public final TextInputEditText etDateOfBirth;

  @NonNull
  public final TextInputEditText etName;

  @NonNull
  public final TextInputEditText etRegNo;

  @NonNull
  public final TextInputEditText etRoomNo;

  @NonNull
  public final TextInputLayout tilBlock;

  @NonNull
  public final TextInputLayout tilDateOfBirth;

  @NonNull
  public final TextInputLayout tilName;

  @NonNull
  public final TextInputLayout tilRegNo;

  @NonNull
  public final TextInputLayout tilRoomNo;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAdminDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnAddStudent, @NonNull MaterialButton btnCancelAddStudent,
      @NonNull MaterialButton btnManageRooms, @NonNull MaterialButton btnManageStudents,
      @NonNull MaterialButton btnManageWorkers, @NonNull MaterialButton btnReports,
      @NonNull MaterialButton btnSignOut, @NonNull MaterialButton btnSubmitStudent,
      @NonNull MaterialCardView cardAddStudent, @NonNull TextInputEditText etBlock,
      @NonNull TextInputEditText etDateOfBirth, @NonNull TextInputEditText etName,
      @NonNull TextInputEditText etRegNo, @NonNull TextInputEditText etRoomNo,
      @NonNull TextInputLayout tilBlock, @NonNull TextInputLayout tilDateOfBirth,
      @NonNull TextInputLayout tilName, @NonNull TextInputLayout tilRegNo,
      @NonNull TextInputLayout tilRoomNo, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnAddStudent = btnAddStudent;
    this.btnCancelAddStudent = btnCancelAddStudent;
    this.btnManageRooms = btnManageRooms;
    this.btnManageStudents = btnManageStudents;
    this.btnManageWorkers = btnManageWorkers;
    this.btnReports = btnReports;
    this.btnSignOut = btnSignOut;
    this.btnSubmitStudent = btnSubmitStudent;
    this.cardAddStudent = cardAddStudent;
    this.etBlock = etBlock;
    this.etDateOfBirth = etDateOfBirth;
    this.etName = etName;
    this.etRegNo = etRegNo;
    this.etRoomNo = etRoomNo;
    this.tilBlock = tilBlock;
    this.tilDateOfBirth = tilDateOfBirth;
    this.tilName = tilName;
    this.tilRegNo = tilRegNo;
    this.tilRoomNo = tilRoomNo;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddStudent;
      MaterialButton btnAddStudent = ViewBindings.findChildViewById(rootView, id);
      if (btnAddStudent == null) {
        break missingId;
      }

      id = R.id.btnCancelAddStudent;
      MaterialButton btnCancelAddStudent = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelAddStudent == null) {
        break missingId;
      }

      id = R.id.btnManageRooms;
      MaterialButton btnManageRooms = ViewBindings.findChildViewById(rootView, id);
      if (btnManageRooms == null) {
        break missingId;
      }

      id = R.id.btnManageStudents;
      MaterialButton btnManageStudents = ViewBindings.findChildViewById(rootView, id);
      if (btnManageStudents == null) {
        break missingId;
      }

      id = R.id.btnManageWorkers;
      MaterialButton btnManageWorkers = ViewBindings.findChildViewById(rootView, id);
      if (btnManageWorkers == null) {
        break missingId;
      }

      id = R.id.btnReports;
      MaterialButton btnReports = ViewBindings.findChildViewById(rootView, id);
      if (btnReports == null) {
        break missingId;
      }

      id = R.id.btnSignOut;
      MaterialButton btnSignOut = ViewBindings.findChildViewById(rootView, id);
      if (btnSignOut == null) {
        break missingId;
      }

      id = R.id.btnSubmitStudent;
      MaterialButton btnSubmitStudent = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitStudent == null) {
        break missingId;
      }

      id = R.id.cardAddStudent;
      MaterialCardView cardAddStudent = ViewBindings.findChildViewById(rootView, id);
      if (cardAddStudent == null) {
        break missingId;
      }

      id = R.id.etBlock;
      TextInputEditText etBlock = ViewBindings.findChildViewById(rootView, id);
      if (etBlock == null) {
        break missingId;
      }

      id = R.id.etDateOfBirth;
      TextInputEditText etDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (etDateOfBirth == null) {
        break missingId;
      }

      id = R.id.etName;
      TextInputEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etRegNo;
      TextInputEditText etRegNo = ViewBindings.findChildViewById(rootView, id);
      if (etRegNo == null) {
        break missingId;
      }

      id = R.id.etRoomNo;
      TextInputEditText etRoomNo = ViewBindings.findChildViewById(rootView, id);
      if (etRoomNo == null) {
        break missingId;
      }

      id = R.id.tilBlock;
      TextInputLayout tilBlock = ViewBindings.findChildViewById(rootView, id);
      if (tilBlock == null) {
        break missingId;
      }

      id = R.id.tilDateOfBirth;
      TextInputLayout tilDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (tilDateOfBirth == null) {
        break missingId;
      }

      id = R.id.tilName;
      TextInputLayout tilName = ViewBindings.findChildViewById(rootView, id);
      if (tilName == null) {
        break missingId;
      }

      id = R.id.tilRegNo;
      TextInputLayout tilRegNo = ViewBindings.findChildViewById(rootView, id);
      if (tilRegNo == null) {
        break missingId;
      }

      id = R.id.tilRoomNo;
      TextInputLayout tilRoomNo = ViewBindings.findChildViewById(rootView, id);
      if (tilRoomNo == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAdminDashboardBinding((CoordinatorLayout) rootView, btnAddStudent,
          btnCancelAddStudent, btnManageRooms, btnManageStudents, btnManageWorkers, btnReports,
          btnSignOut, btnSubmitStudent, cardAddStudent, etBlock, etDateOfBirth, etName, etRegNo,
          etRoomNo, tilBlock, tilDateOfBirth, tilName, tilRegNo, tilRoomNo, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
