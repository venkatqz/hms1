// Generated by view binder compiler. Do not edit!
package com.example.hms1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hms1.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddStudentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText etBlock;

  @NonNull
  public final TextInputEditText etDateOfBirth;

  @NonNull
  public final TextInputEditText etName;

  @NonNull
  public final TextInputEditText etRegistrationNumber;

  @NonNull
  public final TextInputEditText etRoomNumber;

  private DialogAddStudentBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText etBlock, @NonNull TextInputEditText etDateOfBirth,
      @NonNull TextInputEditText etName, @NonNull TextInputEditText etRegistrationNumber,
      @NonNull TextInputEditText etRoomNumber) {
    this.rootView = rootView;
    this.etBlock = etBlock;
    this.etDateOfBirth = etDateOfBirth;
    this.etName = etName;
    this.etRegistrationNumber = etRegistrationNumber;
    this.etRoomNumber = etRoomNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddStudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddStudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_student, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddStudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etBlock;
      TextInputEditText etBlock = ViewBindings.findChildViewById(rootView, id);
      if (etBlock == null) {
        break missingId;
      }

      id = R.id.etDateOfBirth;
      TextInputEditText etDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (etDateOfBirth == null) {
        break missingId;
      }

      id = R.id.etName;
      TextInputEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etRegistrationNumber;
      TextInputEditText etRegistrationNumber = ViewBindings.findChildViewById(rootView, id);
      if (etRegistrationNumber == null) {
        break missingId;
      }

      id = R.id.etRoomNumber;
      TextInputEditText etRoomNumber = ViewBindings.findChildViewById(rootView, id);
      if (etRoomNumber == null) {
        break missingId;
      }

      return new DialogAddStudentBinding((LinearLayout) rootView, etBlock, etDateOfBirth, etName,
          etRegistrationNumber, etRoomNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
