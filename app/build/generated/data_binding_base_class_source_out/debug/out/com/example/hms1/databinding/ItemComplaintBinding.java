// Generated by view binder compiler. Do not edit!
package com.example.hms1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hms1.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemComplaintBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView tvComplaintType;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvNotes;

  @NonNull
  public final TextView tvRoomNumber;

  @NonNull
  public final TextView tvStatus;

  private ItemComplaintBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView tvComplaintType, @NonNull TextView tvDate, @NonNull TextView tvDescription,
      @NonNull TextView tvNotes, @NonNull TextView tvRoomNumber, @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.tvComplaintType = tvComplaintType;
    this.tvDate = tvDate;
    this.tvDescription = tvDescription;
    this.tvNotes = tvNotes;
    this.tvRoomNumber = tvRoomNumber;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemComplaintBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemComplaintBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_complaint, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemComplaintBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvComplaintType;
      TextView tvComplaintType = ViewBindings.findChildViewById(rootView, id);
      if (tvComplaintType == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvNotes;
      TextView tvNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvNotes == null) {
        break missingId;
      }

      id = R.id.tvRoomNumber;
      TextView tvRoomNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvRoomNumber == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ItemComplaintBinding((MaterialCardView) rootView, tvComplaintType, tvDate,
          tvDescription, tvNotes, tvRoomNumber, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
